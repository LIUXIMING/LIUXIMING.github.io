<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>anzhiyu主题配置</title>
      <link href="/2024/05/04/anzhiyu%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/05/04/anzhiyu%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h1><h2 id="搭建Hexo博客"><a href="#搭建Hexo博客" class="headerlink" title="搭建Hexo博客"></a>搭建Hexo博客</h2><p>如果你还没有Hexo博客，请按照Hexo官方文档进行安装、建站。</p><h2 id="作者的话"><a href="#作者的话" class="headerlink" title="作者的话"></a>作者的话</h2><p>请注意<code>_config.anzhiyu.yml</code>中的配置优先级大于<code>_config.yml</code>，所以更新主题后需要比对主题文件夹中的<code>theme/anzhiyu/_config.yml</code> 文件内容，一般在<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/releases">release</a> 的说明里会特别提示或给出配置文件版本对比diff，同步修改原配置文件即可。</p><blockquote><p>[Tip]</p><p>致题的新用户：</p><ul><li>本指南经过数个版本打磨，绝大部分的功能都有详细说明，请仔细阅读，节约自己和他人的时间；</li><li>本指南中提到的：”<strong>站点配置</strong>“ 指的 <code>Hexo</code> 博客目录下的 <code>_config.yml</code>，”<strong>主题配置</strong>“ 指的是 <code>theme/anzhiyu/_config.yml</code> 或者 <code>_config.anzhiyu.yml</code> ，注意区分；</li><li>本指南中提到的 <code>source</code> 目录都指的是博客目录下的 <code>source</code> 文件夹，不推荐修改主题内 <code>source</code> 目录；</li><li>每次无论 <code>hexo g</code> 或 <code>hexo s</code>，都最好先使用 <code>hexo clean</code> 清除本地缓存；</li><li>页面结果以本地 <code>hexo s</code> 为准，部署后的异常大部分是线上缓存原因，在确认没有报错的情况下，等待若干时间后即可正常；</li><li>由于主题的不同版本会存在配置差异，本指南以最新版本为准。</li></ul></blockquote><p>本指南不包括所有的配置说明，几乎每个配置在主题配置中都有注释，可配合指南共同参考使用。</p><p>另外本指南仅包含主题范围内的使用说明，如果是 Hexo 的使用或者 Hexo 插件的使用，请查阅各自的文档。</p><p>若存在其他主题相关的疑问请在 <a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/issues/new">issues</a> 留言。</p><h2 id="主题安装-1"><a href="#主题安装-1" class="headerlink" title="主题安装"></a>主题安装</h2><blockquote><p>[温馨提示]</p><p>Anzhiyu主题拥有<strong>Main</strong>(稳定版)和<strong>Dev</strong>(测试版)两种版本, 我们推荐您安装使用<strong>Github</strong>(稳定版)以获得最佳的主题体验</p></blockquote><h3 id="方式一-Github-推荐"><a href="#方式一-Github-推荐" class="headerlink" title="方式一(Github 推荐):"></a><strong>方式一(Github 推荐):</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b main https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><p>如遇安装不上可以使用以下url代理安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b main https://ghproxy.com/https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><h3 id="方式二-Release-推荐"><a href="#方式二-Release-推荐" class="headerlink" title="方式二(Release 推荐):"></a><strong>方式二(Release 推荐):</strong></h3><p>下载 <a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/releases">最新 release 版本</a> 解压到 <code>themes</code> 目录，并将解压出的文件夹重命名为 <code>anzhiyu</code>。</p><h3 id="方式三-npm安装"><a href="#方式三-npm安装" class="headerlink" title="方式三(npm安装):"></a><strong>方式三(npm安装):</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-anzhiyu</span><br></pre></td></tr></table></figure><p>此方法只支持 Hexo 5.0.0 以上版本 通过 npm 安装并不会在 themes 里生成主题文件夹，而是在 node_modules 里生成</p><h3 id="测试版Dev"><a href="#测试版Dev" class="headerlink" title="测试版Dev"></a><strong>测试版Dev</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b dev https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><p>测试版可能存在 bug，追求稳定的请安装稳定版</p><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>打开 <strong>Hexo</strong> 根目录下的 <code>config.yml</code>, 找到以下配置项，把主题改为<code>anzhiyu</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">anzhiyu</span></span><br></pre></td></tr></table></figure><h2 id="安装-pug-和-stylus-渲染插件"><a href="#安装-pug-和-stylus-渲染插件" class="headerlink" title="安装 pug 和 stylus 渲染插件"></a>安装 pug 和 stylus 渲染插件<a href="https://docs.anheyu.com/initall.html#%E5%AE%89%E8%A3%85-pug-%E5%92%8C-stylus-%E6%B8%B2%E6%9F%93%E6%8F%92%E4%BB%B6"></a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>无法安装可以使用cnpm进行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save --registry=http://registry.npmmirror.com</span><br></pre></td></tr></table></figure><h2 id="覆盖配置"><a href="#覆盖配置" class="headerlink" title="覆盖配置"></a>覆盖配置<a href="https://docs.anheyu.com/initall.html#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE"></a></h2><p>覆盖配置可以使<code>主题配置</code>放置在 anzhiyu 目录之外，避免在更新主题时丢失自定义的配置。</p><p>通过 Npm 安装主题的用户可忽略，其他用户建议学习使用。</p><ul><li>macos&#x2F;linux 在博客根目录运行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -rf ./themes/anzhiyu/_config.yml ./_config.anzhiyu.yml</span><br></pre></td></tr></table></figure><ul><li>windows 复制<code>/themes/anzhiyu/_config.yml</code>此文件到 hexo 根目录，并重命名为<code>_config.anzhiyu.yml</code></li></ul><p>以后如果修改任何主题配置，都只需修改 _config.anzhiyu.yml 的配置即可。</p><p>注意：</p><ul><li>只要存在于 <code>_config.anzhiyu.yml</code> 的配置都是高优先级，修改原 <code>_config.yml</code> 是无效的。</li><li>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 <code>_config.anzhiyu.yml</code> 同步修改。</li><li>想查看覆盖配置有没有生效，可以通过 <code>hexo g --debug</code> 查看命令行输出。</li><li>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的</li></ul><h2 id="本地启动-hexo"><a href="#本地启动-hexo" class="headerlink" title="本地启动 hexo"></a>本地启动 hexo<a href="https://docs.anheyu.com/initall.html#%E6%9C%AC%E5%9C%B0%E5%90%AF%E5%8A%A8-hexo"></a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>此时就能在看到效果了。</p><h2 id="升级方法"><a href="#升级方法" class="headerlink" title="升级方法"></a>升级方法<a href="https://docs.anheyu.com/initall.html#%E5%8D%87%E7%BA%A7%E6%96%B9%E6%B3%95"></a></h2><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a><strong>方式一</strong></h3><blockquote><p>适用于通过 Github 或 Release 压缩包主题，且没有自行修改任何代码的情况。</p></blockquote><ol><li>先将原文件夹重命名为别的名称，例如 <code>anzhiyu-bkp</code>，用于升级失败进行回退；</li><li>选择自己的安装方式升级</li></ol><p><code>Github</code>：重新重新执行安装命令即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b main https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><p><code>Release</code>：按照安装步骤，下载 <a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/releases">release</a> 并解压重命名为 <code>anzhiyu</code>；</p><ol><li>比对升级后的配置文件<code>_config.yml</code>，如果某些配置发生了变化（改名或弃用），<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/releases">release</a> 的说明里会特别提示或给出配置文件版本对比diff，同步修改原配置文件即可。</li></ol><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a><strong>方式二</strong></h3><blockquote><p>适用于通过 Npm 安装主题。</p></blockquote><p>在博客目录下执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update --save hexo-theme-anzhiyu</span><br></pre></td></tr></table></figure><p>比对升级后的配置文件<code>_config.yml</code>,如果某些配置发生了变化（改名或弃用），<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/releases">release</a> 的说明里会特别提示或给出配置文件版本对比diff，同步修改原配置文件即可。</p><h3 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a><strong>方式三</strong></h3><p>全量更新：删除<strong>theme&#x2F;anzhiyu</strong>文件夹，然后重新执行安装命令即可。</p><p>比对升级后的配置文件<code>_config.yml</code>,如果某些配置发生了变化（改名或弃用），<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/releases">release</a> 的说明里会特别提示或给出配置文件版本对比diff，同步修改原配置文件即可。</p>]]></content>
      
      
      <categories>
          
          <category> #实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>侧边栏添加个性时钟</title>
      <link href="/2024/04/19/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E6%B7%BB%E5%8A%A0%E4%B8%AA%E6%80%A7%E6%97%B6%E9%92%9F/"/>
      <url>/2024/04/19/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E6%B7%BB%E5%8A%A0%E4%B8%AA%E6%80%A7%E6%97%B6%E9%92%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><p>创建 <table><tr><td bgcolor=PowderBlue>[themes]&#x2F;source&#x2F;js&#x2F;custom&#x2F;digit-clock.js</td></tr></table> 文件，在其中添加如下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个包含10个元素的数组，每个元素的值为索引  </span></span><br><span class="line"><span class="keyword">var</span> _time10 = <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="title class_">Array</span>(<span class="number">10</span>)).<span class="title function_">map</span>(<span class="function">(<span class="params">n, i</span>) =&gt;</span> i);</span><br><span class="line"><span class="comment">// 创建一个包含前6个元素的数组，作为时间的小时和分钟  </span></span><br><span class="line"><span class="keyword">var</span> _time6 = _time10.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"><span class="comment">// 创建一个包含前3个元素的数组，作为时间的秒钟  </span></span><br><span class="line"><span class="keyword">var</span> _time3 = _time10.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">// 创建一个包含3个子数组的二维数组，用于表示时钟的结构  </span></span><br><span class="line"><span class="keyword">var</span> _Structure = [</span><br><span class="line">    [_time3, _time10],</span><br><span class="line">    [_time6, _time10],</span><br><span class="line">    [_time6, _time10]</span><br><span class="line">];</span><br><span class="line"><span class="comment">// 创建一个div元素作为时钟的容器，并设置id为&#x27;clock&#x27;  </span></span><br><span class="line"><span class="keyword">var</span> clock = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">clock.<span class="property">id</span> = <span class="string">&#x27;clock&#x27;</span>;</span><br><span class="line"><span class="comment">// 将时钟容器添加到元素中元素中  </span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;digit-clock&quot;</span>).<span class="title function_">appendChild</span>(clock);</span><br><span class="line"><span class="comment">// 创建一个数组用于存储每个数字组的div元素  </span></span><br><span class="line"><span class="keyword">var</span> digitGroups = [];</span><br><span class="line"><span class="comment">// 请求动画帧并调用update函数  </span></span><br><span class="line"><span class="title function_">requestAnimationFrame</span>(update);</span><br><span class="line"><span class="comment">// 遍历_Structure数组  </span></span><br><span class="line">_Structure.<span class="title function_">forEach</span>(<span class="function"><span class="params">digits</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 创建一个div元素作为数字组的容器，并添加类名&#x27;digit-group&#x27;  </span></span><br><span class="line">    <span class="keyword">var</span> digitGroup = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    digitGroup.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;digit-group&#x27;</span>);</span><br><span class="line">    <span class="comment">// 将数字组的容器添加到时钟容器中，并将其添加到digitGroups数组中  </span></span><br><span class="line">    clock.<span class="title function_">appendChild</span>(digitGroup);</span><br><span class="line">    digitGroups.<span class="title function_">push</span>(digitGroup);</span><br><span class="line">    <span class="comment">// 遍历digits数组  </span></span><br><span class="line">    digits.<span class="title function_">forEach</span>(<span class="function"><span class="params">digitList</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 创建一个div元素作为数字的容器，并添加类名&#x27;digit&#x27;  </span></span><br><span class="line">        <span class="keyword">var</span> digit = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        digit.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;digit&#x27;</span>);</span><br><span class="line">        <span class="comment">// 遍历digitList数组  </span></span><br><span class="line">        digitList.<span class="title function_">forEach</span>(<span class="function"><span class="params">n</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 创建一个div元素作为数字的子元素，并添加类名&#x27;digit-number&#x27;，设置文本内容为n  </span></span><br><span class="line">            <span class="keyword">var</span> ele = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">            ele.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;digit-number&#x27;</span>);</span><br><span class="line">            ele.<span class="property">innerText</span> = n;</span><br><span class="line">            <span class="comment">// 将数字的子元素添加到数字的容器中  </span></span><br><span class="line">            digit.<span class="title function_">appendChild</span>(ele);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 将数字的容器添加到数字组的容器中  </span></span><br><span class="line">        digitGroup.<span class="title function_">appendChild</span>(digit);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 定义update函数  </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 请求动画帧并调用update函数  </span></span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(update);</span><br><span class="line">    <span class="comment">// 创建一个Date对象表示当前时间  </span></span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="comment">// 获取当前时间的小时、分钟和秒钟，并将它们转换为两位数的字符串数组  </span></span><br><span class="line">    <span class="keyword">var</span> time = [date.<span class="title function_">getHours</span>(), date.<span class="title function_">getMinutes</span>(), date.<span class="title function_">getSeconds</span>()].</span><br><span class="line">        <span class="title function_">map</span>(<span class="function"><span class="params">n</span> =&gt;</span> <span class="string">`0<span class="subst">$&#123;n&#125;</span>`</span>.<span class="title function_">slice</span>(-<span class="number">2</span>).<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">map</span>(<span class="function"><span class="params">e</span> =&gt;</span> +e)).</span><br><span class="line">        <span class="title function_">reduce</span>(<span class="function">(<span class="params">p, n</span>) =&gt;</span> p.<span class="title function_">concat</span>(n), []);</span><br><span class="line">    <span class="comment">// 遍历time数组  </span></span><br><span class="line">    time.<span class="title function_">forEach</span>(<span class="function">(<span class="params">n, i</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> digit = digitGroups[<span class="title class_">Math</span>.<span class="title function_">floor</span>(i * <span class="number">0.5</span>)].<span class="property">children</span>[i % <span class="number">2</span>].<span class="property">children</span>;</span><br><span class="line">        <span class="comment">// 遍历数字组的子元素  </span></span><br><span class="line">        <span class="title class_">Array</span>.<span class="title function_">from</span>(digit).<span class="title function_">forEach</span>(<span class="function">(<span class="params">e, i2</span>) =&gt;</span> e.<span class="property">classList</span>[i2 === n ? <span class="string">&#x27;add&#x27;</span> : <span class="string">&#x27;remove&#x27;</span>](<span class="string">&#x27;bright&#x27;</span>));</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 <table><tr><td bgcolor=PowderBlue>[themes]&#x2F;source&#x2F;css&#x2F;custom&#x2F;digit-clock.css</td></tr></table> 文件，在其中添加如下内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#digit-clock</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#clock</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.digit-group</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.digit-group</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:last-child</span>)<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: inherit;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;:&quot;</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.digit</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">33px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.digit</span> <span class="selector-class">.digit-number</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: inherit;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">90deg</span>);</span><br><span class="line">    <span class="attribute">transition</span>: font-size <span class="number">200ms</span>,transform <span class="number">350ms</span>,color <span class="number">150ms</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.digit</span> <span class="selector-class">.digit-number</span><span class="selector-class">.bright</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: inherit;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 <table><tr><td bgcolor=PowderBlue>[blog]&#x2F;source&#x2F;_data&#x2F;widget.yml</td></tr></table>文件，在其中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">top:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">card-clock</span></span><br><span class="line">    <span class="attr">id_name:</span></span><br><span class="line">    <span class="attr">name:</span></span><br><span class="line">    <span class="attr">icon:</span> </span><br><span class="line">    <span class="attr">order:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="string">&lt;div</span> <span class="string">id=&quot;digit-clock&quot;&gt;&lt;/div&gt;&lt;script</span> <span class="string">defer</span> <span class="string">async</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/js/custom/digit-clock.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><font size=5>假如你想除了文章页面都显示时钟就将 <font color=Blue>top</font> 改成 <font color=Blue>Bottom</font><br>可以通过修改 <font color=Blue>opder</font> 的值来为你的侧边栏进行排序<br>假如你使用 <font color=Blue>gulp</font> 压缩资源，可能会导致无法运行，修改 <font color=Blue>gulpfile.js</font>(我这里是使用的空梦的<font color=Blue><a href="https://kmar.top/posts/7d9fb37e/">gulp</a></font> ):</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 压缩js</span></span><br><span class="line"><span class="comment">// 参数 doc：https://github.com/terser-js/terser#minify-options</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-js&#x27;</span>, <span class="function">() =&gt;</span></span><br><span class="line">    gulp.<span class="title function_">src</span>([<span class="string">&#x27;./public/**/*.js&#x27;</span>,<span class="string">&#x27;!./public/**/digit-clock.js&#x27;</span>])</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">terser</span>(&#123;</span><br><span class="line">            <span class="attr">compress</span>: &#123;</span><br><span class="line">                <span class="comment">/** <span class="doctag">@see</span> https://blog.csdn.net/weixin_39842528/article/details/81390588 */</span></span><br><span class="line">                <span class="attr">sequences</span>: <span class="number">50</span>,</span><br><span class="line">                <span class="attr">unsafe</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">unsafe_math</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">pure_getters</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">ecma</span>: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;))</span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><font size=5>我们可以在 <font color=Blue>gulp.src</font> 中添加一个 <font color=Blue>!.&#x2F;public&#x2F;path&#x2F;to&#x2F;your&#x2F;file.js</font> 来排除某个文件。这意味着 <font color=Blue>Gulp</font> 将会处理<font color=Blue>.&#x2F;public&#x2F;**&#x2F;*.js</font> 匹配的所有文件，除了<font color=Blue>.&#x2F;public&#x2F;path&#x2F;to&#x2F;your&#x2F;file.js</font>。</font></p>]]></content>
      
      
      <categories>
          
          <category> #实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2024/04/19/test/"/>
      <url>/2024/04/19/test/</url>
      
        <content type="html"><![CDATA[<p>##这是我的第一篇文章</p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Blog</title>
      <link href="/2024/04/18/hello-world/"/>
      <url>/2024/04/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
